import React, { useState } from 'react';
import './HealthPage.css';

function HealthPage({ onBack }) {
  // –î–∞–Ω–Ω—ã–µ –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–æ–≤
  const [healthData, setHealthData] = useState({
    weight: 75,
    height: 180,
    steps: 8452,
    sleep: 7.2,
    water: 1.8,
    calories: 2350
  });

  // –ò—Å—Ç–æ—Ä–∏—è –≤–µ—Å–∞ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π
  const weightHistory = [
    { date: '01.05', weight: 76.2 },
    { date: '05.05', weight: 75.8 },
    { date: '10.05', weight: 75.5 },
    { date: '15.05', weight: 75.3 },
    { date: '20.05', weight: 75.1 },
    { date: '25.05', weight: 75.0 },
    { date: '30.05', weight: 74.8 }
  ];

  // –î–∞–Ω–Ω—ã–µ —Å–Ω–∞ –∑–∞ –Ω–µ–¥–µ–ª—é
  const sleepData = [
    { day: '–ü–Ω', hours: 6.5 },
    { day: '–í—Ç', hours: 7.2 },
    { day: '–°—Ä', hours: 6.8 },
    { day: '–ß—Ç', hours: 7.5 },
    { day: '–ü—Ç', hours: 8.1 },
    { day: '–°–±', hours: 7.8 },
    { day: '–í—Å', hours: 7.2 }
  ];

  // –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ –¥–Ω—è–º
  const activityData = [
    { day: '–ü–Ω', steps: 7854 },
    { day: '–í—Ç', steps: 10234 },
    { day: '–°—Ä', steps: 9231 },
    { day: '–ß—Ç', steps: 8452 },
    { day: '–ü—Ç', steps: 11245 },
    { day: '–°–±', steps: 6543 },
    { day: '–í—Å', steps: 7891 }
  ];

  // –†–∞—Å—Å—á–µ—Ç –ò–ú–¢
  const calculateBMI = () => {
    const heightInMeters = healthData.height / 100;
    return (healthData.weight / (heightInMeters * heightInMeters)).toFixed(1);
  };

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –ò–ú–¢
  const getBMIStatus = (bmi) => {
    if (bmi < 18.5) return { status: '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–π –≤–µ—Å', color: '#ff6b6b' };
    if (bmi < 25) return { status: '–ù–æ—Ä–º–∞–ª—å–Ω—ã–π –≤–µ—Å', color: '#51cf66' };
    if (bmi < 30) return { status: '–ò–∑–±—ã—Ç–æ—á–Ω—ã–π –≤–µ—Å', color: '#ffd43b' };
    return { status: '–û–∂–∏—Ä–µ–Ω–∏–µ', color: '#ff6b6b' };
  };

  const bmi = calculateBMI();
  const bmiStatus = getBMIStatus(bmi);

  // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –ª–∏–Ω–µ–π–Ω–æ–≥–æ –≥—Ä–∞—Ñ–∏–∫–∞
  const LineChart = ({ data, color, maxValue }) => {
    const maxDataValue = Math.max(...data.map(item => item.value || item.weight || item.steps || item.hours));
    const chartMax = maxValue || maxDataValue;

    return (
      <div className="line-chart">
        <div className="chart-lines">
          {data.map((item, index) => {
            const value = item.value || item.weight || item.steps || item.hours;
            const percentage = (value / chartMax) * 100;
            return (
              <div key={index} className="chart-item">
                <div className="chart-bar-container">
                  <div 
                    className="chart-bar" 
                    style={{ 
                      height: `${percentage}%`,
                      backgroundColor: color
                    }}
                  ></div>
                </div>
                <span className="chart-label">{item.date || item.day}</span>
              </div>
            );
          })}
        </div>
      </div>
    );
  };

  // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∫—Ä—É–≥–æ–≤–æ–π –¥–∏–∞–≥—Ä–∞–º–º—ã
  const CircularProgress = ({ value, max, color, label, unit }) => {
    const percentage = (value / max) * 100;
    
    return (
      <div className="circular-progress">
        <div className="progress-circle">
          <div 
            className="progress-fill"
            style={{
              background: `conic-gradient(${color} ${percentage * 3.6}deg, #f0f0f0 0deg)`
            }}
          ></div>
          <div className="progress-text">
            <span className="progress-value">{value}</span>
            <span className="progress-unit">{unit}</span>
          </div>
        </div>
        <span className="progress-label">{label}</span>
      </div>
    );
  };

  return (
    <div className="app">
      <header className="app-header">
        <button className="back-button" onClick={onBack}>
          ‚Äπ
        </button>
        <div>
          <h1>–ó–¥–æ—Ä–æ–≤—å–µ</h1>
          <p className="address">–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π –∑–¥–æ—Ä–æ–≤—å—è</p>
        </div>
      </header>

      <main className="main-content">
        {/* –û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ */}
        <section className="section">
          <h2>–û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏</h2>
          <div className="health-cards">
            <div className="health-card">
              <div className="health-card-icon">‚öñÔ∏è</div>
              <div className="health-card-content">
                <span className="health-card-value">{healthData.weight} –∫–≥</span>
                <span className="health-card-label">–í–µ—Å</span>
              </div>
            </div>
            
            <div className="health-card">
              <div className="health-card-icon">üìè</div>
              <div className="health-card-content">
                <span className="health-card-value">{healthData.height} —Å–º</span>
                <span className="health-card-label">–†–æ—Å—Ç</span>
              </div>
            </div>
            
            <div className="health-card">
              <div className="health-card-icon">üíì</div>
              <div className="health-card-content">
                <span className="health-card-value">{bmi}</span>
                <span 
                  className="health-card-label"
                  style={{ color: bmiStatus.color }}
                >
                  –ò–ú–¢ ‚Ä¢ {bmiStatus.status}
                </span>
              </div>
            </div>
          </div>
        </section>

        {/* –ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å */}
        <section className="section">
          <h2>–ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</h2>
          <div className="activity-cards">
            <CircularProgress 
              value={healthData.steps} 
              max={10000} 
              color="#4dabf7" 
              label="–®–∞–≥–∏" 
              unit="—à–∞–≥–æ–≤"
            />
            
            <CircularProgress 
              value={healthData.sleep} 
              max={8} 
              color="#9775fa" 
              label="–°–æ–Ω" 
              unit="—á–∞—Å–æ–≤"
            />
            
            <CircularProgress 
              value={healthData.water} 
              max={2} 
              color="#339af0" 
              label="–í–æ–¥–∞" 
              unit="–ª"
            />
            
            <CircularProgress 
              value={healthData.calories} 
              max={2500} 
              color="#ff6b6b" 
              label="–ö–∞–ª–æ—Ä–∏–∏" 
              unit="–∫–∫–∞–ª"
            />
          </div>
        </section>

        {/* –ì—Ä–∞—Ñ–∏–∫ –≤–µ—Å–∞ */}
        <section className="section">
          <div className="chart-header">
            <h2>–î–∏–Ω–∞–º–∏–∫–∞ –≤–µ—Å–∞</h2>
            <span className="chart-period">–ó–∞ 30 –¥–Ω–µ–π</span>
          </div>
          <div className="chart-container">
            <LineChart 
              data={weightHistory} 
              color="#51cf66" 
              maxValue={78}
            />
          </div>
          <div className="chart-stats">
            <div className="chart-stat">
              <span className="stat-value">-1.4 –∫–≥</span>
              <span className="stat-label">–ò–∑–º–µ–Ω–µ–Ω–∏–µ</span>
            </div>
            <div className="chart-stat">
              <span className="stat-value">74.8 –∫–≥</span>
              <span className="stat-label">–¢–µ–∫—É—â–∏–π –≤–µ—Å</span>
            </div>
          </div>
        </section>

        {/* –ì—Ä–∞—Ñ–∏–∫ —Å–Ω–∞ –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ */}
        <div className="charts-row">
          <section className="section">
            <div className="chart-header">
              <h3>–ö–∞—á–µ—Å—Ç–≤–æ —Å–Ω–∞</h3>
              <span className="chart-average">{healthData.sleep} —á/–Ω–æ—á—å</span>
            </div>
            <div className="chart-container small">
              <LineChart 
                data={sleepData} 
                color="#9775fa" 
                maxValue={9}
              />
            </div>
          </section>

          <section className="section">
            <div className="chart-header">
              <h3>–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</h3>
              <span className="chart-average">9,231 —à–∞–≥/–¥–µ–Ω—å</span>
            </div>
            <div className="chart-container small">
              <LineChart 
                data={activityData} 
                color="#4dabf7" 
                maxValue={12000}
              />
            </div>
          </section>
        </div>

        {/* –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ */}
        <section className="section">
          <h2>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</h2>
          <div className="recommendations">
            <div className="recommendation-card">
              <div className="recommendation-icon">üíß</div>
              <div className="recommendation-content">
                <h4>–ü–µ–π—Ç–µ –±–æ–ª—å—à–µ –≤–æ–¥—ã</h4>
                <p>–°–µ–≥–æ–¥–Ω—è –≤—ã–ø–∏—Ç–æ 1.8–ª –∏–∑ —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã—Ö 2–ª</p>
              </div>
            </div>
            
            <div className="recommendation-card">
              <div className="recommendation-icon">üö∂</div>
              <div className="recommendation-content">
                <h4>–ü—Ä–æ–π–¥–∏—Ç–µ –µ—â–µ 1548 —à–∞–≥–æ–≤</h4>
                <p>–î–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –¥–Ω–µ–≤–Ω–æ–π —Ü–µ–ª–∏ 10,000 —à–∞–≥–æ–≤</p>
              </div>
            </div>
            
            <div className="recommendation-card">
              <div className="recommendation-icon">üò¥</div>
              <div className="recommendation-content">
                <h4>–£–ª—É—á—à–∏—Ç–µ –∫–∞—á–µ—Å—Ç–≤–æ —Å–Ω–∞</h4>
                <p>–°—Ç–∞—Ä–∞–π—Ç–µ—Å—å —Å–ø–∞—Ç—å 7-9 —á–∞—Å–æ–≤ –∫–∞–∂–¥—É—é –Ω–æ—á—å</p>
              </div>
            </div>
          </div>
        </section>
      </main>
    </div>
  );
}

export default HealthPage;